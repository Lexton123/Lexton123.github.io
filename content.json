{"meta":{"title":"良逸","subtitle":"用来记录这世间","description":"只要超越了痛苦，在对岸就会有彩虹般的幸福等待着我们。","author":"LiangYi","url":"http://Lexton123.github.io","root":"/"},"pages":[{"title":"分类","date":"2020-09-15T01:46:49.701Z","updated":"2019-10-14T10:13:40.679Z","comments":false,"path":"categories/index.html","permalink":"http://lexton123.github.io/categories/index.html","excerpt":"","text":""},{"title":"关于我","date":"2020-09-26T10:49:58.541Z","updated":"2020-09-26T10:49:58.541Z","comments":false,"path":"about/index.html","permalink":"http://lexton123.github.io/about/index.html","excerpt":"","text":"20岁新时代青年 努力生活 励志过得好点 大三狗 纠结未来ing 希望借此博客记录点滴想法 喜欢 MOBA游戏|青春电影|轻音乐|熟人聚会 坐标 北京 ...... Everything is ok 精通计算机网络 能够熟练地插拔网线 熟练掌握Java、Python、C++等单词的拼写 精通各种计算机系统的开机关机 能够熟练地安装杀毒软件 （狗头🐕）"},{"title":"link","date":"2020-09-15T01:46:49.741Z","updated":"2019-10-12T08:08:05.458Z","comments":false,"path":"link/index.html","permalink":"http://lexton123.github.io/link/index.html","excerpt":"","text":""},{"title":"project","date":"2020-09-15T01:46:49.742Z","updated":"2019-10-12T08:08:33.783Z","comments":false,"path":"project/index.html","permalink":"http://lexton123.github.io/project/index.html","excerpt":"","text":""},{"title":"日程表","date":"2019-10-14T10:07:18.000Z","updated":"2019-10-14T10:07:49.645Z","comments":true,"path":"schedule/index.html","permalink":"http://lexton123.github.io/schedule/index.html","excerpt":"","text":""},{"title":"search","date":"2019-10-11T14:30:43.000Z","updated":"2019-10-12T08:09:05.628Z","comments":false,"path":"search/index.html","permalink":"http://lexton123.github.io/search/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-09-15T01:49:47.415Z","updated":"2019-10-14T10:06:18.189Z","comments":false,"path":"tags/index.html","permalink":"http://lexton123.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"数据库——openGauss","slug":"数据库——openGauss","date":"2020-10-21T12:00:56.000Z","updated":"2020-10-21T13:08:22.363Z","comments":true,"path":"2020/10/21/数据库——openGauss/","link":"","permalink":"http://lexton123.github.io/2020/10/21/%E6%95%B0%E6%8D%AE%E5%BA%93%E2%80%94%E2%80%94openGauss/","excerpt":"","text":"没有尝试安装 而是直接将配置好的虚拟机拷贝来使用 发现错误，无法连接到数据库[omm@test ~]$ gsql -d studentdb -h 192.168.100.91 -U student -p 26000 -W student@ustb2020 -rgsql: could not connect to server: Operation now in progress Is the server running on host &quot;192.168.100.91&quot; and accepting TCP/IP connections on port 26000? 查看数据库状态，发现不是Normal[omm@test ~]$ gs_om -t status --detail[ Cluster State ]cluster_state : Unavailableredistributing : Nocurrent_az : AZ_ALL[ Datanode State ]node node_ip instance state--------------------------------------------------------------------------1 test 192.168.100.91 6001 /opt/gaussdb/data/db1 P Primary Manually stopped 解决方案…发现只是数据库没有启动，输入命令后即Normal，接着使用gsql即可连接创建好的数据库 （gsql是openGauss提供的在命令行下运行的数据库连接工具。此工具除了具备操作数据库的基本功能，还提供了若干高级特性，便于用户使用。） [omm@test ~]$ gs_om -t startStarting cluster.==================================================================================Successfully started.","categories":[{"name":"数据库","slug":"数据库","permalink":"http://lexton123.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"http://lexton123.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"ROS记录","slug":"ROS记录","date":"2020-10-18T13:42:37.000Z","updated":"2020-10-18T14:06:39.301Z","comments":true,"path":"2020/10/18/ROS记录/","link":"","permalink":"http://lexton123.github.io/2020/10/18/ROS%E8%AE%B0%E5%BD%95/","excerpt":"","text":"catkin_make报错 安装依赖–安装ROS-Academy-for-Beginners所需要的依赖$ cd ~/tutorial_ws$ rosdep install –from-paths src –ignore-src –rosdistro=kinetic -y注意:以上命令非常重要,缺少依赖将导致软件包无法正常编译和运行。在开始编译之前,需要确保Gazebo在7.0版本以上$ gazebo -v #确认7.0及以上 关闭硬件加速： echo &quot; export SVGA_VGPU10=0&quot; &gt;&gt; ~/.bashrc source ~/.bashrcubuntu16.04默认的Gazebo安装是Gazebo 7，可能不适合当前的使用需求，故需要更新: sudo sh -c ‘echo “deb http://packages.osrfoundation.org/gazebo/ubuntu-stable lsb_re lease -cs main” &gt; /etc/apt/sources.list.d/gazebo-stable.list’ wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add - sudo apt-get update sudo apt-get install gazebo7","categories":[{"name":"比赛","slug":"比赛","permalink":"http://lexton123.github.io/categories/%E6%AF%94%E8%B5%9B/"}],"tags":[{"name":"ROS","slug":"ROS","permalink":"http://lexton123.github.io/tags/ROS/"}]},{"title":"EOS_lab记录","slug":"EOS-lab记录","date":"2020-10-08T14:16:23.000Z","updated":"2020-10-12T12:54:23.398Z","comments":true,"path":"2020/10/08/EOS-lab记录/","link":"","permalink":"http://lexton123.github.io/2020/10/08/EOS-lab%E8%AE%B0%E5%BD%95/","excerpt":"","text":"EOS介绍 ​ EOS 是一个可以在 Intel X86 平台上运行的、面向教学的开源操作系统。为了让 EOS 适合于教学，EOS 被设计的十分小巧，并且尽量保持架构简单。但是，EOS 仍然涵盖了系统引导、进程管理、内存管理、IO 管理、文件系统等重要的操作系统概念。 ​ EOS 有配套的 IDE (Integrated Development Environment)实验环境。该 IDE 环境可以直接在 Windows 操作系统上安装和卸载，用户界面和操作习惯与 Microsoft Visual Studio 完全类似，有经验的读者可以 迅速上手。 实验网站：codecode EOSLab安装问题Engintime OS Lab安装包为msi文件，安装时可能报错2502、2503。解决方案：使用管理员的命令提示符，输入下列命令即可顺利安装。msiexec /package &quot;msi file path&quot; EOSLab使用使用前需安装git，并配置好email和namepull和push前需要填写codecode账号的密码实验对应实验指导书表 实验 指导书对应实验 1.操作系统启动（2） 2 2.线程状态及转换（3） 4 3.进程同步（4） 5 4.线程调度（4） 6 5.物理存储器与进程逻辑地址空间管理（2） 7 6.FAT12文件系统（3） 14 7.扩展实验（2） 实验0：实验环境使用…. Tips： 每个实验都是给一个kernel去修改生成完整版本的SDK指Debug和Realease &amp;Semaphore-&gt;WaitListHead不要忘记符号 &amp; 所以可以这样取巧吗？COPY下一个版本的实验的代码？？？？？（猜想） 实验1：操作系统的启动注意：在实验中可能会修改“项目名右键-属性-远程目标机”多次，预期界面不一致时可以检查这个配置是否正确！实验2：线程状态及转换在这个实验中需要实现的是resume操作，psspnd.c中PsResumThread函数 需要注意的是，恢复操作可以分为三步 ​ // 1.从挂起队列移除​ ListRemoveEntry(&amp;SuspendListHead);​ // 2.恢复就绪​ PspReadyThread(Thread);​ // 3.线程调度​ PspThreadSchedule(); 这个操作是错误的。（仅第一次挂起恢复时有效，第二次挂起报错 原因分析：在rtl.h中发现了ListRemoveEntry函数的原型为 PLIST_ENTRY ListRemoveEntry(PLIST_ENTRY ListEntry);PLIST_ENTRY ListRemoveHead(PLIST_ENTRY ListHead);PLIST_ENTRY ListRemoveTail(PLIST_ENTRY ListHead); 需要区别一下ListHead和ListEntry 只需把第一行代码参数改为&amp;Thread-&gt;StateListEntry即可 教训：使用函数前去找原型！！！实验3：进程同步 0xffffffff是 -1 先判断再循环比先循环再判断可能更好一点！！！a这，注意哦，实验3需要fork两个项目，内核和应用程序！！！！！","categories":[{"name":"实验","slug":"实验","permalink":"http://lexton123.github.io/categories/%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"EOS","slug":"EOS","permalink":"http://lexton123.github.io/tags/EOS/"}]},{"title":"配置U盘便携式linux系统","slug":"配置U盘便携式linux系统","date":"2020-10-05T13:12:27.000Z","updated":"2020-10-05T13:12:27.292Z","comments":true,"path":"2020/10/05/配置U盘便携式linux系统/","link":"","permalink":"http://lexton123.github.io/2020/10/05/%E9%85%8D%E7%BD%AEU%E7%9B%98%E4%BE%BF%E6%90%BA%E5%BC%8Flinux%E7%B3%BB%E7%BB%9F/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"OS-2","slug":"OS-2","date":"2020-10-03T06:50:19.000Z","updated":"2020-10-03T07:36:52.635Z","comments":true,"path":"2020/10/03/OS-2/","link":"","permalink":"http://lexton123.github.io/2020/10/03/OS-2/","excerpt":"","text":"进程管理进程（Process） 程序的1次执行 程序是进程的静态实体（即执行代码）。 程序是静态的，进程是动态的。 进程：程序、数据、PCB 进程的5种基本状态 新建 就绪（就绪挂起） 运行 阻塞（阻塞挂起） 完成 进程控制块——PCB 进程标识信息 CPU现场 进程调度信息 状态 优先级 阻塞条件 占用时间 占用资源的信息 同一状态进程的PCB组成一个链表 进程控制 进程创建原语 进程撤销原语 阻塞原语 唤醒原语 挂起原语 激活（解挂）原语 改变进程优先级 进程同步多个进程的并发执行 同步：严格的时序关系 互斥：不能同时访问共享资源 临界资源与临界区互斥方案 (1）任何两个进程不能同时处于临界区。(2）临界区外的进程不应阻止其他进程进入临界区。(3）不应使进程在临界区外无休止地等待。就是说，临界区代码执行时间要短。(4）不应对CPU的个数和进程之间的相对运行速度作任何假设。 1.设置锁变量lock（错误） 2.严格轮转法（不可取） 3.Peterson解决方案 4.关中断 5.机器指令 TSL指令 Swap指令 （缺点：忙等待） 信号量（Semaphore） 取值是整数 P、V两个原子操作可以访问 P：请求分配 -1 V：释放资源 +1 应用实例：生产资-消费者问题（有界缓冲问题） 注意事项 V操作是释放资源的，每个进程中连续多个V操作的出现次序关系不是很大。 每个进程中的多个P操作出现顺序不能颠倒。通常应先执行对资源信号量的P操作，再执行对互斥信号量的P操作，否则可能会引起死锁。 互斥信号量的P操作尽可能靠近临界区。 P操作和V操作在很多情况下是成对出现的。当为互斥操作时，它们同处于同一进程;当为同步操作时，则不在同一进程中出现。 用信号量可以解决任何同步互斥问题。 经典进程同步问题 哲学家进餐问题 读者-写者问题 睡眠的理发师问题 进程间通信类型 共享存储区 消息传递 消息队列 邮箱 管道（有名/无名） 消息队列 通常，Send采用非阻塞，Receive可采用两种方式。 线程（Thread） 线程是进程的1条执行路径 用户级线程 核心级线程","categories":[{"name":"专业笔记","slug":"专业笔记","permalink":"http://lexton123.github.io/categories/%E4%B8%93%E4%B8%9A%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"OS","slug":"OS","permalink":"http://lexton123.github.io/tags/OS/"}]},{"title":"OS-1","slug":"OS-1","date":"2020-10-03T06:18:06.000Z","updated":"2020-10-03T06:56:01.894Z","comments":true,"path":"2020/10/03/OS-1/","link":"","permalink":"http://lexton123.github.io/2020/10/03/OS-1/","excerpt":"","text":"OS的作用 一个虚拟机 一个资源管理器 进程管理 内存管理 文件管理 I/O设备管理 OS是硬件之上的第一层软件，是一组程序作业 程序 数据 作业说明书 批处理（作业队列，无交互能力）单道程序 多道程序多道批处理系统分时系统并发 多个事件同一时间间隔内发生 并行 多个事件同一时刻发生 多用户与多任务实时OS网络OS 两种基本模式： C/S模式 Peer-to-Peer模式（对等） 分布式OSCPU 特权指令 两种工作状态 核心态 （管态 用户态 （目态 程序状态字PSW和程序计数器PC 内存 存储最小单位：一个2进制位 最小的编制单位：字节 1字节=8位 1字=2字节 内存分块 内存保护 界限寄存器 存储保护键 中断 硬件中断 异常 系统调用 时钟 硬件时钟（时钟寄存器实现） 绝对时钟：记录当前时间 相对时钟：分时系统的基础 软件时钟（时钟队列实现） 重定位（程序中的相对地址转换为绝对地址，分为静态和动态）","categories":[{"name":"专业笔记","slug":"专业笔记","permalink":"http://lexton123.github.io/categories/%E4%B8%93%E4%B8%9A%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"OS","slug":"OS","permalink":"http://lexton123.github.io/tags/OS/"}]},{"title":"ROS——智能汽车比赛","slug":"ROS——智能汽车比赛","date":"2020-09-28T12:32:04.000Z","updated":"2020-09-28T12:58:40.852Z","comments":true,"path":"2020/09/28/ROS——智能汽车比赛/","link":"","permalink":"http://lexton123.github.io/2020/09/28/ROS%E2%80%94%E2%80%94%E6%99%BA%E8%83%BD%E6%B1%BD%E8%BD%A6%E6%AF%94%E8%B5%9B/","excerpt":"","text":"参加的一个关于智能汽车的校内赛内容：ROS（机器人操作系统）形式：线上工具：ubuntu16.04 ROS 环境配置：虚拟机安装Ubuntu 16.04：https://blog.csdn.net/qq1326702940/article/details/82322079 ROS安装：http://wiki.ros.org/cn/kinetic/Installation/Ubuntu ROS概述与环境搭建：https://mp.weixin.qq.com/s/IBY2RMSEXde5uZpuRi3cuA PS：建议安装ubuntu16.04和ROS对应版本ROS Kinetic 也可升级至ubuntu18.04和ROS对应版本ROS Melodic （很多开源的包已经不维护Kinetic，最低支持Melodic，但校内赛够用，且下放工程默认只支持ROS Kinetic，其他工程配置问题需要自行解决） 相关资料:仓库：https://gitee.com/huang_zhen_xiong/ustb_ros","categories":[{"name":"比赛","slug":"比赛","permalink":"http://lexton123.github.io/categories/%E6%AF%94%E8%B5%9B/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://lexton123.github.io/tags/linux/"},{"name":"ROS","slug":"ROS","permalink":"http://lexton123.github.io/tags/ROS/"},{"name":"比赛","slug":"比赛","permalink":"http://lexton123.github.io/tags/%E6%AF%94%E8%B5%9B/"}]},{"title":"Markdown语法","slug":"markdown语法","date":"2020-09-15T13:52:35.000Z","updated":"2020-09-15T13:54:30.827Z","comments":true,"path":"2020/09/15/markdown语法/","link":"","permalink":"http://lexton123.github.io/2020/09/15/markdown%E8%AF%AD%E6%B3%95/","excerpt":"","text":"欢迎使用 Markdown在线编辑器 MdEditorMarkdown是一种轻量级的「标记语言」 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md” MdEditor是一个在线编辑Markdown文档的编辑器MdEditor扩展了Markdown的功能（如表格、脚注、内嵌HTML等等），以使让Markdown转换成更多的格式，和更丰富的展示效果，这些功能原初的Markdown尚不具备。 Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc，Pandao；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。 MdEditor源于Pandao的JavaScript开源项目，开源地址Editor.md，并在MIT开源协议的许可范围内进行了优化，以适应广大用户群体的需求。向优秀的markdown开源编辑器原作者Pandao致敬。 MdEditor的功能列表演示标题H1标题H2标题H3标题H4标题H5标题H5字符效果和横线等 删除线 删除线（开启识别HTML标签时） 斜体字 斜体字 粗体 粗体 粗斜体 粗斜体 上标：X2，下标：O2 缩写(同HTML的abbr标签) 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启 The HTML specification is maintained by the W3C. 引用 Blockquotes 引用文本 Blockquotes 引用的行内混合 Blockquotes 引用：如果想要插入空白换行即&lt;br /&gt;标签，在插入处先键入两个以上的空格然后回车即可，普通链接。 锚点与链接 Links普通链接普通链接带标题直接链接：https://www.mdeditor.com[锚点链接][anchor-id][anchor-id]: https://www.mdeditor.com/mailto:test.test@gmail.comGFM a-tail link @pandao邮箱地址自动链接 test.test@gmail.com www@vip.qq.com @pandao 多语言代码高亮 Codes行内代码 Inline code执行命令：npm install marked 缩进风格即缩进四个空格，也做为实现类似 &lt;pre&gt; 预格式化文本 ( Preformatted Text ) 的功能。 &lt;?php echo &quot;Hello world!&quot;; ?&gt;预格式化文本： | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |JS代码function test() &#123; console.log(&quot;Hello world!&quot;);&#125; HTML 代码 HTML codes&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;mate charest=&quot;utf-8&quot; /&gt; &lt;meta name=&quot;keywords&quot; content=&quot;Editor.md, Markdown, Editor&quot; /&gt; &lt;title&gt;Hello world!&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; body&#123;font-size:14px;color:#444;font-family: &quot;Microsoft Yahei&quot;, Tahoma, &quot;Hiragino Sans GB&quot;, Arial;background:#fff;&#125; ul&#123;list-style: none;&#125; img&#123;border:none;vertical-align: middle;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 class=&quot;text-xxl&quot;&gt;Hello world!&lt;/h1&gt; &lt;p class=&quot;text-green&quot;&gt;Plain text&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 图片 Images图片加链接 (Image + Link)： Follow your heart. 列表 Lists无序列表（减号）Unordered Lists (-) 列表一 列表二 列表三 无序列表（星号）Unordered Lists (*) 列表一 列表二 列表三 无序列表（加号和嵌套）Unordered Lists (+) 列表一 列表二 列表二-1 列表二-2 列表二-3 列表三 列表一 列表二 列表三 有序列表 Ordered Lists (-) 第一行 第二行 第三行 GFM task list GFM task list 1 GFM task list 2 GFM task list 3 GFM task list 3-1 GFM task list 3-2 GFM task list 3-3 GFM task list 4 GFM task list 4-1 GFM task list 4-2 绘制表格 Tables 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234 First Header Second Header Content Cell Content Cell Content Cell Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell Function name Description help() Display the help window. destroy() Destroy your computer! Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 Item Value Computer $1600 Phone $12 Pipe $1 特殊符号 HTML Entities Codes&copy; &amp; &uml; &trade; &iexcl; &pound;&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; X&sup2; Y&sup3; &frac34; &frac14; &times; &divide; &raquo; 18&ordm;C &quot; &apos; [========] Emoji表情 :smiley: Blockquotes :star: GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x: :smiley: @mentions, :smiley: #refs, links, formatting, and tags supported :editormd-logo:; list syntax required (any unordered or ordered list supported) :editormd-logo-3x:; [ ] :smiley: this is a complete item :smiley:; []this is an incomplete item test link :fa-star: @pandao; [ ]this is an incomplete item :fa-star: :fa-gear:; :smiley: this is an incomplete item test link :fa-star: :fa-gear:; :smiley: this is :fa-star: :fa-gear: an incomplete item test link; 反斜杠 Escape*literal asterisks* [========] 科学公式 TeX(KaTeX)$$E=mc^2$$ 行内的公式$$E=mc^2$$行内的公式，行内的$$E=mc^2$$公式。 $$x &gt; y$$ $$(\\sqrt{3x-1}+(1+x)^2)$$ $$\\sin(\\alpha)^{\\theta}=\\sum_{i=0}^{n}(x^i + \\cos(f))$$ 多行公式： \\displaystyle\\left( \\sum\\_&#123;k&#x3D;1&#125;^n a\\_k b\\_k \\right)^2\\leq\\left( \\sum\\_&#123;k&#x3D;1&#125;^n a\\_k^2 \\right)\\left( \\sum\\_&#123;k&#x3D;1&#125;^n b\\_k^2 \\right) \\displaystyle \\frac&#123;1&#125;&#123; \\Bigl(\\sqrt&#123;\\phi \\sqrt&#123;5&#125;&#125;-\\phi\\Bigr) e^&#123; \\frac25 \\pi&#125;&#125; &#x3D; 1+\\frac&#123;e^&#123;-2\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-4\\pi&#125;&#125; &#123; 1+\\frac&#123;e^&#123;-6\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-8\\pi&#125;&#125; &#123;1+\\cdots&#125; &#125; &#125; &#125; f(x) = \\int_&#123;-\\infty&#125;^\\infty \\hat f(\\xi)\\,e^&#123;2 \\pi i \\xi x&#125; \\,d\\xi 分页符 Page break Print Test: Ctrl + P [========] 绘制流程图 Flowchartst&#x3D;&gt;start: 用户登陆op&#x3D;&gt;operation: 登陆操作cond&#x3D;&gt;condition: 登陆成功 Yes or No?e&#x3D;&gt;end: 进入后台st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op [========] 绘制序列图 Sequence DiagramAndrew-&gt;China: Says HelloNote right of China: China thinks\\nabout itChina--&gt;Andrew: How are you?Andrew-&gt;&gt;China: I am good thanks! End","categories":[{"name":"博客","slug":"博客","permalink":"http://lexton123.github.io/categories/%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"语法","slug":"语法","permalink":"http://lexton123.github.io/tags/%E8%AF%AD%E6%B3%95/"},{"name":"blog","slug":"blog","permalink":"http://lexton123.github.io/tags/blog/"}]},{"title":"记录博客操作","slug":"记录博客操作","date":"2019-12-12T13:42:37.000Z","updated":"2020-10-19T11:24:31.629Z","comments":true,"path":"2019/12/12/记录博客操作/","link":"","permalink":"http://lexton123.github.io/2019/12/12/%E8%AE%B0%E5%BD%95%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/","excerpt":"","text":"文章添加图片方法1! + [错误提示] + (图片路径)这个属性可以加在摘要指定语法前：”&lt; !– more – &gt;” 方法2在front-matter里使用”photos: “字段并且可以用”description: “字段代替方法1的语法 图床使用的是路过图床当对BLOG修改后，本地发生改变，上传后无改变时 由于这是静态页面，浏览器会对一些文件进行缓冲，读取的部分文件，仍然为上次或上上次修改后的，故需要清楚缓冲，或按F12后，disable cache后刷新当前页，读取最新修改后，可重新打开cache，或者不关心它 ​","categories":[{"name":"博客","slug":"博客","permalink":"http://lexton123.github.io/categories/%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://lexton123.github.io/tags/blog/"}]},{"title":"关于二进制炸弹实验的简单化题解","slug":"binary-bomb","date":"2019-11-17T13:42:37.000Z","updated":"2019-11-17T13:42:37.000Z","comments":true,"path":"2019/11/17/binary-bomb/","link":"","permalink":"http://lexton123.github.io/2019/11/17/binary-bomb/","excerpt":"","text":"二进制炸弹（Binary Bomb）实验是本人程序设计实践课的内容之一。 内容：这是深入理解计算机系统（CSAPP）的一个实验。只给出二进制可执行文件（在liunx下可执行）与主函数的C语言代码。运行二进制可执行文件Bomb将会进入一个拆弹程序，共有phase0~phase7 + secret 八关。输入正确的答案即可拆除炸弹。否则爆炸。 目的：通过对一个二进制可执行程序的理解和逆向工程，加深对对程序的机器级表示、汇编语言、调试器和逆向工程等方面知识的理解和掌握。 工具： gdb objdump strings（本文采用此方法） IDA反汇编 写在前面如下给出各关的大致题目方向 phase0：字符串比较 phase1：浮点表示 phase2：循环 phase3：条件/分支 phase4：递归调用和栈 phase5：指针 phase6：链表/指针/结构 secret：只有在phase4 or phase5 or …的拆解字符串后再附加一特定字符串后才会出现 bomb可执行程序接受0或1个命令行参数 如果不指定参数，则bomb程序在输出欢迎信息后，等待用户按行输入每一阶段用来拆除炸弹的字符串，并根据输入字符串决定是通过相应阶段还是引爆该阶段的炸弹（输出“BOOM!!! ”）。 也可将一纯文本文件作为程序的唯一参数（例如“./bomb strings.txt”），文件中的每行包含拆除对应炸弹阶段的字符串，程序将依次检查每一阶段拆除字符串的正确性来决定炸弹拆除成败。 在拆除炸弹的过程中，可以选择跳过一些暂时未能拆除的阶段 可在要跳过的阶段中输入任意非空白（即不全是空格、制表、换行字符）字符串，将引爆相应阶段的炸弹，但程序不会中止而是进入下一阶段。 热 身使用objdump对bomb进行反汇编 ​ objdump：反汇编二进制炸弹程序，获得其中汇编指令供分析 objdump -d bomb 输出bomb程序的反汇编结果 objdump -d bomb &gt; bomb.s 获得bomb程序的反汇编结果并保存于文本文件bomb.s中供分析 objdump -t bomb 打印bomb程序的符号表，其中包含bomb中所有函数、全局变量的名称和存储地址 strings","categories":[{"name":"实验","slug":"实验","permalink":"http://lexton123.github.io/categories/%E5%AE%9E%E9%AA%8C/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://lexton123.github.io/tags/linux/"},{"name":"二进制炸弹","slug":"二进制炸弹","permalink":"http://lexton123.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%82%B8%E5%BC%B9/"},{"name":"Bomb","slug":"Bomb","permalink":"http://lexton123.github.io/tags/Bomb/"}]},{"title":"说明","slug":"说明","date":"2019-10-01T09:14:57.000Z","updated":"2020-09-15T02:50:04.956Z","comments":true,"path":"2019/10/01/说明/","link":"","permalink":"http://lexton123.github.io/2019/10/01/%E8%AF%B4%E6%98%8E/","excerpt":"","text":"这是我的第一篇文章然而实际上，并没有任何内容！ 因为我要睡觉了！ㄟ( ▔, ▔ )ㄏ 喜欢可以关注哟！ HeLLO，MY FRIEDN! End","categories":[{"name":"胡说八道","slug":"胡说八道","permalink":"http://lexton123.github.io/categories/%E8%83%A1%E8%AF%B4%E5%85%AB%E9%81%93/"}],"tags":[{"name":"闲聊啊","slug":"闲聊啊","permalink":"http://lexton123.github.io/tags/%E9%97%B2%E8%81%8A%E5%95%8A/"}]}],"categories":[{"name":"数据库","slug":"数据库","permalink":"http://lexton123.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"比赛","slug":"比赛","permalink":"http://lexton123.github.io/categories/%E6%AF%94%E8%B5%9B/"},{"name":"实验","slug":"实验","permalink":"http://lexton123.github.io/categories/%E5%AE%9E%E9%AA%8C/"},{"name":"专业笔记","slug":"专业笔记","permalink":"http://lexton123.github.io/categories/%E4%B8%93%E4%B8%9A%E7%AC%94%E8%AE%B0/"},{"name":"博客","slug":"博客","permalink":"http://lexton123.github.io/categories/%E5%8D%9A%E5%AE%A2/"},{"name":"胡说八道","slug":"胡说八道","permalink":"http://lexton123.github.io/categories/%E8%83%A1%E8%AF%B4%E5%85%AB%E9%81%93/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"http://lexton123.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"ROS","slug":"ROS","permalink":"http://lexton123.github.io/tags/ROS/"},{"name":"EOS","slug":"EOS","permalink":"http://lexton123.github.io/tags/EOS/"},{"name":"OS","slug":"OS","permalink":"http://lexton123.github.io/tags/OS/"},{"name":"linux","slug":"linux","permalink":"http://lexton123.github.io/tags/linux/"},{"name":"比赛","slug":"比赛","permalink":"http://lexton123.github.io/tags/%E6%AF%94%E8%B5%9B/"},{"name":"语法","slug":"语法","permalink":"http://lexton123.github.io/tags/%E8%AF%AD%E6%B3%95/"},{"name":"blog","slug":"blog","permalink":"http://lexton123.github.io/tags/blog/"},{"name":"二进制炸弹","slug":"二进制炸弹","permalink":"http://lexton123.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%82%B8%E5%BC%B9/"},{"name":"Bomb","slug":"Bomb","permalink":"http://lexton123.github.io/tags/Bomb/"},{"name":"闲聊啊","slug":"闲聊啊","permalink":"http://lexton123.github.io/tags/%E9%97%B2%E8%81%8A%E5%95%8A/"}]}